// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: commands.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Run Executable
type RunExecutableOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Command       string                 `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	Args          []string               `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunExecutableOptions) Reset() {
	*x = RunExecutableOptions{}
	mi := &file_commands_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunExecutableOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunExecutableOptions) ProtoMessage() {}

func (x *RunExecutableOptions) ProtoReflect() protoreflect.Message {
	mi := &file_commands_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunExecutableOptions.ProtoReflect.Descriptor instead.
func (*RunExecutableOptions) Descriptor() ([]byte, []int) {
	return file_commands_proto_rawDescGZIP(), []int{0}
}

func (x *RunExecutableOptions) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *RunExecutableOptions) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

type RunExecutableInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Options       *RunExecutableOptions  `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
	Stdin         []byte                 `protobuf:"bytes,2,opt,name=stdin,proto3" json:"stdin,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunExecutableInput) Reset() {
	*x = RunExecutableInput{}
	mi := &file_commands_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunExecutableInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunExecutableInput) ProtoMessage() {}

func (x *RunExecutableInput) ProtoReflect() protoreflect.Message {
	mi := &file_commands_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunExecutableInput.ProtoReflect.Descriptor instead.
func (*RunExecutableInput) Descriptor() ([]byte, []int) {
	return file_commands_proto_rawDescGZIP(), []int{1}
}

func (x *RunExecutableInput) GetOptions() *RunExecutableOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *RunExecutableInput) GetStdin() []byte {
	if x != nil {
		return x.Stdin
	}
	return nil
}

type RunExecutableResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReturnCode    int32                  `protobuf:"varint,1,opt,name=returnCode,proto3" json:"returnCode,omitempty"`
	Stdout        []byte                 `protobuf:"bytes,2,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr        []byte                 `protobuf:"bytes,3,opt,name=stderr,proto3" json:"stderr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunExecutableResult) Reset() {
	*x = RunExecutableResult{}
	mi := &file_commands_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunExecutableResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunExecutableResult) ProtoMessage() {}

func (x *RunExecutableResult) ProtoReflect() protoreflect.Message {
	mi := &file_commands_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunExecutableResult.ProtoReflect.Descriptor instead.
func (*RunExecutableResult) Descriptor() ([]byte, []int) {
	return file_commands_proto_rawDescGZIP(), []int{2}
}

func (x *RunExecutableResult) GetReturnCode() int32 {
	if x != nil {
		return x.ReturnCode
	}
	return 0
}

func (x *RunExecutableResult) GetStdout() []byte {
	if x != nil {
		return x.Stdout
	}
	return nil
}

func (x *RunExecutableResult) GetStderr() []byte {
	if x != nil {
		return x.Stderr
	}
	return nil
}

// Upload/Download File
type FileChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Chunk         []byte                 `protobuf:"bytes,2,opt,name=chunk,proto3" json:"chunk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileChunk) Reset() {
	*x = FileChunk{}
	mi := &file_commands_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileChunk) ProtoMessage() {}

func (x *FileChunk) ProtoReflect() protoreflect.Message {
	mi := &file_commands_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileChunk.ProtoReflect.Descriptor instead.
func (*FileChunk) Descriptor() ([]byte, []int) {
	return file_commands_proto_rawDescGZIP(), []int{3}
}

func (x *FileChunk) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileChunk) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

var File_commands_proto protoreflect.FileDescriptor

const file_commands_proto_rawDesc = "" +
	"\n" +
	"\x0ecommands.proto\x12\x05proto\x1a\x1bgoogle/protobuf/empty.proto\"D\n" +
	"\x14RunExecutableOptions\x12\x18\n" +
	"\acommand\x18\x01 \x01(\tR\acommand\x12\x12\n" +
	"\x04args\x18\x02 \x03(\tR\x04args\"a\n" +
	"\x12RunExecutableInput\x125\n" +
	"\aoptions\x18\x01 \x01(\v2\x1b.proto.RunExecutableOptionsR\aoptions\x12\x14\n" +
	"\x05stdin\x18\x02 \x01(\fR\x05stdin\"e\n" +
	"\x13RunExecutableResult\x12\x1e\n" +
	"\n" +
	"returnCode\x18\x01 \x01(\x05R\n" +
	"returnCode\x12\x16\n" +
	"\x06stdout\x18\x02 \x01(\fR\x06stdout\x12\x16\n" +
	"\x06stderr\x18\x03 \x01(\fR\x06stderr\"5\n" +
	"\tFileChunk\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x14\n" +
	"\x05chunk\x18\x02 \x01(\fR\x05chunk2\xcb\x01\n" +
	"\aCommand\x12L\n" +
	"\rRunExecutable\x12\x19.proto.RunExecutableInput\x1a\x1a.proto.RunExecutableResult\"\x00(\x010\x01\x12:\n" +
	"\n" +
	"FileUpload\x12\x10.proto.FileChunk\x1a\x16.google.protobuf.Empty\"\x00(\x01\x126\n" +
	"\fFileDownload\x12\x10.proto.FileChunk\x1a\x10.proto.FileChunk\"\x000\x01B\tZ\a./protob\x06proto3"

var (
	file_commands_proto_rawDescOnce sync.Once
	file_commands_proto_rawDescData []byte
)

func file_commands_proto_rawDescGZIP() []byte {
	file_commands_proto_rawDescOnce.Do(func() {
		file_commands_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_commands_proto_rawDesc), len(file_commands_proto_rawDesc)))
	})
	return file_commands_proto_rawDescData
}

var file_commands_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_commands_proto_goTypes = []any{
	(*RunExecutableOptions)(nil), // 0: proto.RunExecutableOptions
	(*RunExecutableInput)(nil),   // 1: proto.RunExecutableInput
	(*RunExecutableResult)(nil),  // 2: proto.RunExecutableResult
	(*FileChunk)(nil),            // 3: proto.FileChunk
	(*emptypb.Empty)(nil),        // 4: google.protobuf.Empty
}
var file_commands_proto_depIdxs = []int32{
	0, // 0: proto.RunExecutableInput.options:type_name -> proto.RunExecutableOptions
	1, // 1: proto.Command.RunExecutable:input_type -> proto.RunExecutableInput
	3, // 2: proto.Command.FileUpload:input_type -> proto.FileChunk
	3, // 3: proto.Command.FileDownload:input_type -> proto.FileChunk
	2, // 4: proto.Command.RunExecutable:output_type -> proto.RunExecutableResult
	4, // 5: proto.Command.FileUpload:output_type -> google.protobuf.Empty
	3, // 6: proto.Command.FileDownload:output_type -> proto.FileChunk
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_commands_proto_init() }
func file_commands_proto_init() {
	if File_commands_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_commands_proto_rawDesc), len(file_commands_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_commands_proto_goTypes,
		DependencyIndexes: file_commands_proto_depIdxs,
		MessageInfos:      file_commands_proto_msgTypes,
	}.Build()
	File_commands_proto = out.File
	file_commands_proto_goTypes = nil
	file_commands_proto_depIdxs = nil
}
